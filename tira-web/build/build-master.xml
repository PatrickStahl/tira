<?xml version="1.0"?>
<project name="build-master" default="jar" basedir=".">
    
    <property name="code.root.dir" location="${basedir}/../.." />
    <property name="build" location="build" />
    <property name="dist" location="dist" />
    <property name="bin" location="bin" />
    <property name="generic.build" location="${code.root.dir}/code-generic/code-build" />
    <property name="generic.build.tmp" location="${generic.build}/tmp" />
    <property name="jar" value="${ant.project.name}.jar" />
    <property name="jar.sources" value="${ant.project.name}-sources.jar" />
    <property name="war" value="${ant.project.name}.war" />

    <available file="${generic.build.tmp}/${jar}" type="file" property="jar.exists" />
    
    <pathconvert refid="dependencies" property="dependencybins" pathsep="," setonempty="false">
        <mapper type="regexp" from="^${code.root.dir}/(.*)$$" to="\1/bin" />
    </pathconvert>
    
    <pathconvert refid="sources" property="sourcepatterns" pathsep=",">
        <mapper type="regexp" from="^${basedir}/(.*)$$" to="\1/**/*" />
    </pathconvert>
    
    <target name="compile" unless="is.subant.dist">
        <echo append="true" message="${ant.project.name}" />
        <antcall target="compile.dependency" />
        <mkdir dir="${bin}" />
        <javac destdir="${bin}" target="1.7" source="1.7" encoding="utf8" debug="true" includeantruntime="false">
            <src refid="sources" />
            <classpath>
                <dirset dir="${code.root.dir}" includes="${dependencybins}" />
                <path refid="libraries" />
            </classpath>
        </javac>
        <copy todir="${bin}" overwrite="true" includeEmptyDirs="false">
            <fileset dir="${basedir}" includes="${sourcepatterns}" excludes="**/*.java" />
            <cutdirsmapper dirs="1"/>
        </copy>
    </target>
    
    <target name="compile.dependency" if="dependencybins">
        <subant buildpathref="dependencies" antfile="build/build.xml" target="compile">
            <property name="is.subant.compile" value="true" />
        </subant>
    </target>
    
    <target name="jar" depends="compile">
        <jar basedir="${bin}" destfile="${build}/${jar}" />
        <jar destfile="${build}/${jar.sources}" >
            <fileset dir="${basedir}" includes="${sourcepatterns}" />
        </jar>
    </target>
    
    <target name="dist" depends="dist.clean,compile,jar">
        <subant buildpathref="dependencies" antfile="build/build.xml" target="dist">
            <property name="is.subant.dist" value="true" />
        </subant>
        <mkdir dir="${generic.build.tmp}" />
        <copy todir="${generic.build.tmp}">
            <fileset file="${build}/${jar}" />
            <fileset file="${build}/${jar.sources}" />
            <path refid="libraries" />
        </copy>
        <antcall target="dist.finish" />
    </target>

    <target name="dist.finish" unless="is.subant.dist">
        <copy  todir="${dist}" >
            <fileset dir="${generic.build.tmp}" />
        </copy>
        <delete dir="${generic.build.tmp}" />
    </target>
    
    <target name="dist.clean" unless="is.subant.dist">
        <delete dir="${generic.build.tmp}" />
        <delete dir="${dist}" />
    </target>
    
    <target name="war" depends="dist">
	    <pathconvert refid="war-sources" property="warsourcepatterns" pathsep=",">
	        <mapper type="regexp" from="^${basedir}/(.*)$$" to="\1" />
	    </pathconvert>
        <war destfile="${build}/${war}" needxmlfile="false">
            <fileset dir="${basedir}/${warsourcepatterns}" />
            <lib dir="${dist}" />
        </war>
        <antcall target="dist.clean" />
    </target>
</project>
