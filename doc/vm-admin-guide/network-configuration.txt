# VM Netzwerk-Konfiguration

### `dnsmasq` installieren 


    sudo apt-get install dnsmasq


### Konfiguration fuer VirtualBox hinzufuegen

`log-queries` und `log-dhcp` auskommentieren, die Logs landen in `/var/log/syslog`  letzte Zeile auskommentieren, damit die `virtualbox` Konfigurationsdatei eingelesen wird

    # For debugging purposes, log each DNS query as it passes through
    # dnsmasq.
    log-queries

    # Log lots of extra information about DHCP transactions.
    log-dhcp

    # Include a another lot of configuration options.
    #conf-file=/etc/dnsmasq.more.conf
    conf-dir=/etc/dnsmasq.d


Virtualbox Konfigurationsdatei anlegen: 


    sudo vim /etc/dnsmasq.d/virtualbox

Inhalt der Datei: 

    dhcp-range=interface:vboxnet0,10.60.0.100,10.60.0.100,255.255.255.0,5m
    ...
    dhcp-range=interface:vboxnet20,10.60.20.100,10.60.16.100,255.255.255.0,5m

Jede Zeile definiert die auszugebenen IP-Adressen fuer das jeweilige Interface. 

Die IP-Adresse hat folgende Struktur (am Beispiel von webis18:) `10.18.4.100`  die 18 steht fuer webis18, die 4 fuer die VM ID 4 mit dem interface vboxnet4 - und 100 ist die IP-Adresse der VM. `10.18.4.1` waere die IP-Adresse des Interfaces. 

    sudo service dnsmasq restart

### hostonly Interfaces anlegen 

    VBoxManage hostonlyif  create # legt vboxnet0 an .. dann vboxnet1..
    VBoxManage hostonlyif  ipconfig vboxnet0 --ip 10.18.4.1

### VirtualBox DHCP Server deaktivieren (das uebernimmt jetzt `dnsmasq`)

#### Anzeigen vorhandener Server

    VBoxManage list dhcpservers
    NetworkName:    HostInterfaceNetworking-vboxnet0
    IP:             192.168.56.100
    NetworkMask:    255.255.255.0
    lowerIPAddress: 192.168.56.101
    upperIPAddress: 192.168.56.254
    Enabled:        Yes

#### Loeschen der Server 

    VBoxManage dhcpserver remove --netname HostInterfaceNetworking-vboxnet0

#### ueberpruefen 

    VBoxManage list dhcpservers 
    <sollte leer sein>

#### Netzwerk der VM auf `hostonly` aendern. (z.B. vm4 auf webis18)

    VBoxManage managevm <name> --nic1 hostonly --hostonlyadapter1 vboxnet4 
    VBoxManage hostonlyif ipconfig vboxnet4 --ip 10.18.4.1

#### Auf der VM-Netzwerk neu starten 

    <in VM einloggen>
    sudo /etc/init.d/networking restart 

oder VM rebooten!? 

#### ueberpruefen ob es geklappt hat. 

In der VM:

    ifconfig 

   - hier sollte jetzt eine IP-Adresse aus dem Bereich `10.x.x.100` stehen und nicht mehr 10.2.0.15 

## iptables einrichten damit Internet funktioniert. 

siehe https://gist.github.com/glycoknob/5167055 

    sudo bash iptables.sh 

Damit sollte Portforwarding laufen. 

### jetzt sollte man pingen koennen und DNS sollte auch laufen 

    ping 141.54.1.3 
    ping 8.8.8.8 
    ping google.de


## Bonus: Alle Eigenenschafter der VM auslesen

    VBoxManage list vms | awk '{ print $1 }' # namen
    VBoxManage guestproperty enumerate <name> # eigenschaften 
    VBoxManage guestproperty get <name> "/VirtualBox/GuestInfo/Net/0/V4/IP" | awk '{ print $2}'

## Notes1:

		Der Teil in iptables.sh

		# tl;dr without this we can't ping the host interfaces from the vms on
		machines with multiple interfaces
		for i in $(seq 0 20); do
				ip route add 10.$hostnumber.$i.0/24 dev vboxnet$i table rt3 2> /dev/null;
				ip route add 10.$hostnumber.$i.0/24 dev vboxnet$i table rt2 2> /dev/null;
		done

		wird nur benoetigt, wenn es mehr als eine Netzwerkkarte gibt und
		mehrere Routing Tabellen.
		
## Notes2:

		Man koennte noch dazu schreiben, dass man mit dnsmasq etwas vorsichtig
		sein muss und DNS nicht ausserhalb des Uni-Netzes erreichbar sein
		sollte. Hatte dnsmasq bei mir laufen und hab dann ne boese E-Mail vom
		SCC bekommen: http://de.wikipedia.org/wiki/DNS_Amplification_Attack.
		Das iptables.sh Script blockt aber den Port.		

