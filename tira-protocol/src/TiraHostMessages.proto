syntax = "proto3";

// Install gRPC for Python and steps to compile:
// https://grpc.io/docs/languages/python/quickstart/
// python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. ./TiraHostMessages.proto


package tira.generated;
import 'TiraClientWebMessages.proto';

// The service definition.
service TiraHostService {
  rpc test (Input) returns (Output) {}
  rpc vm_backup (Request) returns (Response) {}
  rpc vm_create (Request) returns (Response) {}
  rpc vm_delete (Request) returns (Response) {}
  rpc vm_info (Request) returns (Response) {}
  rpc vm_sandbox (Request) returns (Response) {}
  rpc vm_shutdown (Request) returns (Response) {}
  rpc vm_snapshot (Request) returns (Response) {}
  rpc vm_start (Request) returns (Response) {}
  rpc vm_stop (Request) returns (Response) {}
  rpc vm_unsandbox (Request) returns (Response) {}
  rpc run_execute(Request) returns (Response) {}
}

message Input {
  string text = 1;
}
message Output {
  string text = 1;
}

// The request message containing parameters required to call Tira scripts
message Request {
  string vmName = 1;
  string ovaFile = 2;
  string userName = 3;
  string submissionFile = 4;
  string inputDatasetName = 5;
  string inputRunPath = 6;
  string outputDirName = 7;
  string sandboxed = 8;
  string optionalParameters = 9;
}

// The response message containing the raw output of Tira scripts
message Response {
  string output = 1;
}
